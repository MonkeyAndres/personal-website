---
import { type CollectionEntry } from 'astro:content'
import Layout from '@components/Layout.astro'
import Container from '@components/Container.astro'
import ArrowCard from '@components/ArrowCard.astro'
import { BLOG } from '@consts'
import { getLocalizedPosts, sortByDate } from '@lib/posts'
import { DEFAULT_LOCALE } from '@lib/i18n'

const locale = Astro.props.locale ?? DEFAULT_LOCALE

const localizedPosts = await getLocalizedPosts(locale)
const sortedPosts = localizedPosts.sort(sortByDate)

type Acc = {
  [year: string]: CollectionEntry<'posts'>[]
}

const posts = sortedPosts.reduce((acc: Acc, post) => {
  const year = post.data.date.getFullYear().toString()
  if (!acc[year]) {
    acc[year] = []
  }
  acc[year].push(post)
  return acc
}, {})

const years = Object.keys(posts).sort((a, b) => parseInt(b) - parseInt(a))
---

<Layout title={BLOG.TITLE} description={BLOG.DESCRIPTION} locale={locale}>
  <Container>
    <aside data-pagefind-ignore>
      <div class="space-y-10">
        <div class="space-y-4">
          {
            years.map((year) => (
              <section class="animate space-y-4">
                <div class="font-semibold text-black dark:text-white">
                  {year}
                </div>
                <div>
                  <ul class="not-prose flex flex-col gap-4">
                    {posts[year].map((post) => (
                      <li>
                        <ArrowCard entry={post} locale={locale} />
                      </li>
                    ))}
                  </ul>
                </div>
              </section>
            ))
          }
        </div>
      </div>
    </aside>
  </Container>
</Layout>
